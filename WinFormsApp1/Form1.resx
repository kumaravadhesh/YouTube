<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAANgDAADYAwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADRz2AA0c9gINHPYZDRz2Pg0c
        9lMNHPZYDRz2WA0c9lgNHPZYDRz2WA0c9lgNHPZYDRz2WA0c9lgNHPZYDRz2WA0c9lgNHPZYDRz2WA0c
        9lgNHPZYDRz2WA0c9lgNHPZTDRz2Pg0c9hkNHPYCDRz2AAAAAAAAAAAADRz2AA0c9gANHPYYDRz2fQ0c
        9tMNHPb0DRz2/A0c9v0NHPb9DRz2/Q0c9v0NHPb9DRz2/Q0c9v0NHPb9DRz2/Q0c9v0NHPb9DRz2/Q0c
        9v0NHPb9DRz2/Q0c9v0NHPb9DRz2/Q0c9vwNHPb0DRz20w0c9n0NHPYYDRz2AA0c9gANHPYADRz2JA0c
        9rkNHPb+DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/g0c9rkNHPYkDRz2AA0c
        9hENHPasDRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9qwNHPYRDRz2ag0c9vcNHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz29w0c9moNHPbDDRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2ww0c9u8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPbvDRz2/Q0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPbFDRz2kQ0c9uANHPb+DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v0NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9pcNHPYCDRz2KQ0c9oMNHPbaDRz2/Q0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2mA0c9gANHPYADRz2AQ0c9iINHPZ5DRz21A0c
        9vwNHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPaYDRz2AA0c9gAAAAAADRz2AA0c
        9gENHPYdDRz2bw0c9s0NHPb7DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9pgNHPYADRz2AAAA
        AAAAAAAAAAAAAA0c9gANHPYADRz2FA0c9nQNHPb0DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2mA0c
        9gANHPYAAAAAAAAAAAAAAAAADRz2AA0c9gUNHPY2DRz2nw0c9vkNHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPaYDRz2AA0c9gAAAAAADRz2AA0c9gQNHPY2DRz2mg0c9uoNHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9pgNHPYADRz2AA0c9gQNHPY0DRz2lw0c9ukNHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2lw0c9gMNHPYxDRz2lA0c9ugNHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/Q0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPbHDRz2lg0c9uYNHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v0NHPbvDRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz27w0c
        9sMNHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPbDDRz2ag0c9vcNHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz29w0c9moNHPYRDRz2rA0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPasDRz2EQ0c9gANHPYkDRz2uQ0c9v4NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c9v8NHPb/DRz2/w0c
        9v8NHPb/DRz2/w0c9v8NHPb+DRz2uQ0c9iQNHPYADRz2AA0c9gANHPYYDRz2fQ0c9tMNHPb0DRz2/A0c
        9v0NHPb9DRz2/Q0c9v0NHPb9DRz2/Q0c9v0NHPb9DRz2/Q0c9v0NHPb9DRz2/Q0c9v0NHPb9DRz2/Q0c
        9v0NHPb9DRz2/Q0c9vwNHPb0DRz20w0c9n0NHPYYDRz2AA0c9gAAAAAAAAAAAA0c9gANHPYCDRz2GQ0c
        9j4NHPZTDRz2WA0c9lgNHPZYDRz2WA0c9lgNHPZYDRz2WA0c9lgNHPZYDRz2WA0c9lgNHPZYDRz2WA0c
        9lgNHPZYDRz2WA0c9lgNHPZYDRz2Uw0c9j4NHPYZDRz2Ag0c9gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////////+AAAAfAAAADgAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAMAAAADwAAAA/gAAAPwAAADwAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAA
        AAHAAAAD4AAAB/////////////////////8=
</value>
  </data>
</root>